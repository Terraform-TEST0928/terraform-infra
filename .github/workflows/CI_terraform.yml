name: Terraform CI

on:
  push:
    branches:
      - main
      - 'feature/*'

jobs:
  CI_terraform:
    runs-on: [self-hosted, Linux, X64]
    strategy:
      matrix:
        environment: [dev] # 現状1環境のみ 
    timeout-minutes: 60
    permissions:
      # workload identity連携によるToken発行には以下権限が必要
      id-token: write
      contents: read

    steps:
    - name: Check Runner User
      run: |
        echo "Current user:"
        whoami
        echo "HOME directory:"
        echo $HOME

    - name: Checkout Repo
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Configure AWS Credentials (AssumeRole)
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::392329150290:role/terraform-assume-role
        aws-region: ap-northeast-1
        role-duration-seconds: 3600

    - name: Verify AWS Authentication
      run: |
        echo "Checking AWS credentials..."
        aws sts get-caller-identity

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.5.7

    - name: Setup TFLint
      uses: terraform-linters/setup-tflint@v4
      with:
        tflint_version: v0.52.0

    - name: Terraform Format Check
      run: terraform fmt -check -recursive
      continue-on-error: true

    - name: Init TFLint
      run: tflint --init
      continue-on-error: true

    - name: Run TFLint
      run: tflint --recursive
      continue-on-error: true

    - name: Terraform Init
      working-directory: env/${{ matrix.environment }}
      run: terraform init

    - name: Terraform Validation
      working-directory: env/${{ matrix.environment }}
      run: terraform validate
      continue-on-error: true

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: config
        scan-ref: .

    - name: Select Terraform Workspace
      working-directory: env/${{ matrix.environment }}
      run: |
        if terraform workspace list | grep -qw "${{ matrix.environment }}"; then
          echo "Workspace ${{ matrix.environment }} exists. Selecting it."
          terraform workspace select "${{ matrix.environment }}"
        else
          echo "Workspace ${{ matrix.environment }} does not exist. Creating it."
          terraform workspace new "${{ matrix.environment }}"
        fi

    - name: Terraform Plan
      working-directory: env/${{ matrix.environment }}
      run: terraform plan